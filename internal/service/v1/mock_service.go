// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/joeyscat/ok-short/internal/service/v1 (interfaces: Service,LinkSrv,LinkTraceSrv)

// Package v1 is a generated GoMock package.
package v1

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/joeyscat/ok-short/internal/model"
	app "github.com/joeyscat/ok-short/pkg/app"
	v4 "github.com/labstack/echo/v4"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// LinkTraces mocks base method.
func (m *MockService) LinkTraces() LinkTraceSrv {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LinkTraces")
	ret0, _ := ret[0].(LinkTraceSrv)
	return ret0
}

// LinkTraces indicates an expected call of LinkTraces.
func (mr *MockServiceMockRecorder) LinkTraces() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LinkTraces", reflect.TypeOf((*MockService)(nil).LinkTraces))
}

// Links mocks base method.
func (m *MockService) Links() LinkSrv {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Links")
	ret0, _ := ret[0].(LinkSrv)
	return ret0
}

// Links indicates an expected call of Links.
func (mr *MockServiceMockRecorder) Links() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Links", reflect.TypeOf((*MockService)(nil).Links))
}

// MockLinkSrv is a mock of LinkSrv interface.
type MockLinkSrv struct {
	ctrl     *gomock.Controller
	recorder *MockLinkSrvMockRecorder
}

// MockLinkSrvMockRecorder is the mock recorder for MockLinkSrv.
type MockLinkSrvMockRecorder struct {
	mock *MockLinkSrv
}

// NewMockLinkSrv creates a new mock instance.
func NewMockLinkSrv(ctrl *gomock.Controller) *MockLinkSrv {
	mock := &MockLinkSrv{ctrl: ctrl}
	mock.recorder = &MockLinkSrvMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLinkSrv) EXPECT() *MockLinkSrvMockRecorder {
	return m.recorder
}

// CreateLink mocks base method.
func (m *MockLinkSrv) CreateLink(arg0 context.Context, arg1 *CreateLinkRequest) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLink", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLink indicates an expected call of CreateLink.
func (mr *MockLinkSrvMockRecorder) CreateLink(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLink", reflect.TypeOf((*MockLinkSrv)(nil).CreateLink), arg0, arg1)
}

// GetLink mocks base method.
func (m *MockLinkSrv) GetLink(arg0 context.Context, arg1 *GetLinkRequest) (*model.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLink", arg0, arg1)
	ret0, _ := ret[0].(*model.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLink indicates an expected call of GetLink.
func (mr *MockLinkSrvMockRecorder) GetLink(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLink", reflect.TypeOf((*MockLinkSrv)(nil).GetLink), arg0, arg1)
}

// ListLinks mocks base method.
func (m *MockLinkSrv) ListLinks(arg0 context.Context, arg1 *app.Pager) ([]*model.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListLinks", arg0, arg1)
	ret0, _ := ret[0].([]*model.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListLinks indicates an expected call of ListLinks.
func (mr *MockLinkSrvMockRecorder) ListLinks(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListLinks", reflect.TypeOf((*MockLinkSrv)(nil).ListLinks), arg0, arg1)
}

// UnShorten mocks base method.
func (m *MockLinkSrv) UnShorten(arg0 context.Context, arg1 *RedirectLinkRequest) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnShorten", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UnShorten indicates an expected call of UnShorten.
func (mr *MockLinkSrvMockRecorder) UnShorten(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnShorten", reflect.TypeOf((*MockLinkSrv)(nil).UnShorten), arg0, arg1)
}

// MockLinkTraceSrv is a mock of LinkTraceSrv interface.
type MockLinkTraceSrv struct {
	ctrl     *gomock.Controller
	recorder *MockLinkTraceSrvMockRecorder
}

// MockLinkTraceSrvMockRecorder is the mock recorder for MockLinkTraceSrv.
type MockLinkTraceSrvMockRecorder struct {
	mock *MockLinkTraceSrv
}

// NewMockLinkTraceSrv creates a new mock instance.
func NewMockLinkTraceSrv(ctrl *gomock.Controller) *MockLinkTraceSrv {
	mock := &MockLinkTraceSrv{ctrl: ctrl}
	mock.recorder = &MockLinkTraceSrvMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLinkTraceSrv) EXPECT() *MockLinkTraceSrvMockRecorder {
	return m.recorder
}

// CreateLinkTrace mocks base method.
func (m *MockLinkTraceSrv) CreateLinkTrace(arg0 context.Context, arg1, arg2 string, arg3 v4.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLinkTrace", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateLinkTrace indicates an expected call of CreateLinkTrace.
func (mr *MockLinkTraceSrvMockRecorder) CreateLinkTrace(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLinkTrace", reflect.TypeOf((*MockLinkTraceSrv)(nil).CreateLinkTrace), arg0, arg1, arg2, arg3)
}

// GetLinkTrace mocks base method.
func (m *MockLinkTraceSrv) GetLinkTrace(arg0 context.Context, arg1 *GetLinkTraceRequest, arg2 *app.Pager) ([]*model.LinkTrace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLinkTrace", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*model.LinkTrace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLinkTrace indicates an expected call of GetLinkTrace.
func (mr *MockLinkTraceSrvMockRecorder) GetLinkTrace(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLinkTrace", reflect.TypeOf((*MockLinkTraceSrv)(nil).GetLinkTrace), arg0, arg1, arg2)
}

// ListLinkTrace mocks base method.
func (m *MockLinkTraceSrv) ListLinkTrace(arg0 context.Context, arg1 *app.Pager) ([]*model.LinkTrace, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListLinkTrace", arg0, arg1)
	ret0, _ := ret[0].([]*model.LinkTrace)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListLinkTrace indicates an expected call of ListLinkTrace.
func (mr *MockLinkTraceSrvMockRecorder) ListLinkTrace(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListLinkTrace", reflect.TypeOf((*MockLinkTraceSrv)(nil).ListLinkTrace), arg0, arg1)
}
